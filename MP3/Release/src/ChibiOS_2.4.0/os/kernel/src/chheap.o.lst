   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"chheap.c"
  16              		.section	.text._heap_init,"ax",%progbits
  17              		.align	1
  18              		.global	_heap_init
  19              		.thumb
  20              		.thumb_func
  22              	_heap_init:
  23              		@ args = 0, pretend = 0, frame = 0
  24              		@ frame_needed = 0, uses_anonymous_args = 0
  25              		@ link register save eliminated.
  26 0000 0448     		ldr	r0, .L2
  27 0002 0549     		ldr	r1, .L2+4
  28 0004 0023     		movs	r3, #0
  29 0006 0160     		str	r1, [r0, #0]
  30 0008 8360     		str	r3, [r0, #8]
  31 000a C360     		str	r3, [r0, #12]
  32 000c 1030     		adds	r0, r0, #16
  33 000e FFF7FEBF 		b	chMtxInit
  34              	.L3:
  35 0012 00BF     		.align	2
  36              	.L2:
  37 0014 00000000 		.word	.LANCHOR0
  38 0018 00000000 		.word	chCoreAlloc
  40              		.section	.text.chHeapInit,"ax",%progbits
  41              		.align	1
  42              		.global	chHeapInit
  43              		.thumb
  44              		.thumb_func
  46              	chHeapInit:
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 0023     		movs	r3, #0
  51 0002 0360     		str	r3, [r0, #0]
  52 0004 8160     		str	r1, [r0, #8]
  53 0006 C360     		str	r3, [r0, #12]
  54 0008 083A     		subs	r2, r2, #8
  55 000a 1030     		adds	r0, r0, #16
  56 000c 0B60     		str	r3, [r1, #0]
  57 000e 4A60     		str	r2, [r1, #4]
  58 0010 FFF7FEBF 		b	chMtxInit
  60              		.section	.text.chHeapAlloc,"ax",%progbits
  61              		.align	1
  62              		.global	chHeapAlloc
  63              		.thumb
  64              		.thumb_func
  66              	chHeapAlloc:
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  70 0002 1C4C     		ldr	r4, .L15
  71 0004 0028     		cmp	r0, #0
  72 0006 18BF     		it	ne
  73 0008 0446     		movne	r4, r0
  74 000a 0731     		adds	r1, r1, #7
  75 000c 04F11000 		add	r0, r4, #16
  76 0010 21F00706 		bic	r6, r1, #7
  77 0014 04F10807 		add	r7, r4, #8
  78 0018 FFF7FEFF 		bl	chMtxLock
  79 001c 18E0     		b	.L7
  80              	.L11:
  81 001e 6B68     		ldr	r3, [r5, #4]
  82 0020 B342     		cmp	r3, r6
  83 0022 14D3     		bcc	.L13
  84 0024 06F10802 		add	r2, r6, #8
  85 0028 9342     		cmp	r3, r2
  86 002a 2868     		ldr	r0, [r5, #0]
  87 002c 01D2     		bcs	.L8
  88 002e 3860     		str	r0, [r7, #0]
  89 0030 08E0     		b	.L9
  90              	.L8:
  91 0032 A850     		str	r0, [r5, r2]
  92 0034 6FF00700 		mvn	r0, #7
  93 0038 A918     		adds	r1, r5, r2
  94 003a 821B     		subs	r2, r0, r6
  95 003c D318     		adds	r3, r2, r3
  96 003e 4B60     		str	r3, [r1, #4]
  97 0040 3960     		str	r1, [r7, #0]
  98 0042 6E60     		str	r6, [r5, #4]
  99              	.L9:
 100 0044 45F8084B 		str	r4, [r5], #8
 101 0048 FFF7FEFF 		bl	chMtxUnlock
 102 004c 10E0     		b	.L10
 103              	.L13:
 104 004e 2F46     		mov	r7, r5
 105              	.L7:
 106 0050 3D68     		ldr	r5, [r7, #0]
 107 0052 002D     		cmp	r5, #0
 108 0054 E3D1     		bne	.L11
 109 0056 FFF7FEFF 		bl	chMtxUnlock
 110 005a 2568     		ldr	r5, [r4, #0]
 111 005c 45B1     		cbz	r5, .L10
 112 005e 06F10800 		add	r0, r6, #8
 113 0062 A847     		blx	r5
 114 0064 0546     		mov	r5, r0
 115 0066 18B1     		cbz	r0, .L10
 116 0068 80E85000 		stmia	r0, {r4, r6}
 117 006c 00F10805 		add	r5, r0, #8
 118              	.L10:
 119 0070 2846     		mov	r0, r5
 120 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 121              	.L16:
 122              		.align	2
 123              	.L15:
 124 0074 00000000 		.word	.LANCHOR0
 126              		.section	.text.chHeapFree,"ax",%progbits
 127              		.align	1
 128              		.global	chHeapFree
 129              		.thumb
 130              		.thumb_func
 132              	chHeapFree:
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 70B5     		push	{r4, r5, r6, lr}
 136 0002 0446     		mov	r4, r0
 137 0004 A0F10805 		sub	r5, r0, #8
 138 0008 50F8080C 		ldr	r0, [r0, #-8]
 139 000c 00F10806 		add	r6, r0, #8
 140 0010 1030     		adds	r0, r0, #16
 141 0012 FFF7FEFF 		bl	chMtxLock
 142 0016 3346     		mov	r3, r6
 143              	.L23:
 144 0018 B342     		cmp	r3, r6
 145 001a 01D0     		beq	.L18
 146 001c 9D42     		cmp	r5, r3
 147 001e 27D9     		bls	.L19
 148              	.L18:
 149 0020 1A68     		ldr	r2, [r3, #0]
 150 0022 0AB1     		cbz	r2, .L20
 151 0024 9542     		cmp	r5, r2
 152 0026 23D2     		bcs	.L19
 153              	.L20:
 154 0028 54F8041C 		ldr	r1, [r4, #-4]
 155 002c 44F8082C 		str	r2, [r4, #-8]
 156 0030 1D60     		str	r5, [r3, #0]
 157 0032 01F10802 		add	r2, r1, #8
 158 0036 54F8086C 		ldr	r6, [r4, #-8]
 159 003a A818     		adds	r0, r5, r2
 160 003c B042     		cmp	r0, r6
 161 003e 07D1     		bne	.L21
 162 0040 4068     		ldr	r0, [r0, #4]
 163 0042 AA58     		ldr	r2, [r5, r2]
 164 0044 0918     		adds	r1, r1, r0
 165 0046 0831     		adds	r1, r1, #8
 166 0048 44F8041C 		str	r1, [r4, #-4]
 167 004c 44F8082C 		str	r2, [r4, #-8]
 168              	.L21:
 169 0050 5A68     		ldr	r2, [r3, #4]
 170 0052 02F1080E 		add	lr, r2, #8
 171 0056 03EB0E0C 		add	ip, r3, lr
 172 005a 6545     		cmp	r5, ip
 173 005c 0AD1     		bne	.L22
 174 005e 54F8040C 		ldr	r0, [r4, #-4]
 175 0062 1118     		adds	r1, r2, r0
 176 0064 54F8082C 		ldr	r2, [r4, #-8]
 177 0068 0831     		adds	r1, r1, #8
 178 006a 5960     		str	r1, [r3, #4]
 179 006c 1A60     		str	r2, [r3, #0]
 180 006e 01E0     		b	.L22
 181              	.L19:
 182 0070 1B68     		ldr	r3, [r3, #0]
 183 0072 D1E7     		b	.L23
 184              	.L22:
 185 0074 BDE87040 		pop	{r4, r5, r6, lr}
 186 0078 FFF7FEBF 		b	chMtxUnlock
 188              		.section	.text.chHeapStatus,"ax",%progbits
 189              		.align	1
 190              		.global	chHeapStatus
 191              		.thumb
 192              		.thumb_func
 194              	chHeapStatus:
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 38B5     		push	{r3, r4, r5, lr}
 198 0002 0D4C     		ldr	r4, .L30
 199 0004 0028     		cmp	r0, #0
 200 0006 18BF     		it	ne
 201 0008 0446     		movne	r4, r0
 202 000a 04F11000 		add	r0, r4, #16
 203 000e 0D46     		mov	r5, r1
 204 0010 FFF7FEFF 		bl	chMtxLock
 205 0014 0023     		movs	r3, #0
 206 0016 04F10802 		add	r2, r4, #8
 207 001a 1C46     		mov	r4, r3
 208 001c 02E0     		b	.L26
 209              	.L27:
 210 001e 5168     		ldr	r1, [r2, #4]
 211 0020 0134     		adds	r4, r4, #1
 212 0022 5B18     		adds	r3, r3, r1
 213              	.L26:
 214 0024 1268     		ldr	r2, [r2, #0]
 215 0026 002A     		cmp	r2, #0
 216 0028 F9D1     		bne	.L27
 217 002a 05B1     		cbz	r5, .L28
 218 002c 2B60     		str	r3, [r5, #0]
 219              	.L28:
 220 002e FFF7FEFF 		bl	chMtxUnlock
 221 0032 2046     		mov	r0, r4
 222 0034 38BD     		pop	{r3, r4, r5, pc}
 223              	.L31:
 224 0036 00BF     		.align	2
 225              	.L30:
 226 0038 00000000 		.word	.LANCHOR0
 228              		.section	.bss.default_heap,"aw",%nobits
 229              		.align	3
 230              		.set	.LANCHOR0,. + 0
 233              	default_heap:
 234 0000 00000000 		.space	32
 234      00000000 
 234      00000000 
 234      00000000 
 234      00000000 
 235              		.ident	"GCC: (Sourcery CodeBench Lite 2012.03-56) 4.6.3"
DEFINED SYMBOLS
                            *ABS*:00000000 chheap.c
     /tmp/ccQnP4dg.s:17     .text._heap_init:00000000 $t
     /tmp/ccQnP4dg.s:22     .text._heap_init:00000000 _heap_init
     /tmp/ccQnP4dg.s:37     .text._heap_init:00000014 $d
     /tmp/ccQnP4dg.s:41     .text.chHeapInit:00000000 $t
     /tmp/ccQnP4dg.s:46     .text.chHeapInit:00000000 chHeapInit
     /tmp/ccQnP4dg.s:61     .text.chHeapAlloc:00000000 $t
     /tmp/ccQnP4dg.s:66     .text.chHeapAlloc:00000000 chHeapAlloc
     /tmp/ccQnP4dg.s:124    .text.chHeapAlloc:00000074 $d
     /tmp/ccQnP4dg.s:127    .text.chHeapFree:00000000 $t
     /tmp/ccQnP4dg.s:132    .text.chHeapFree:00000000 chHeapFree
     /tmp/ccQnP4dg.s:189    .text.chHeapStatus:00000000 $t
     /tmp/ccQnP4dg.s:194    .text.chHeapStatus:00000000 chHeapStatus
     /tmp/ccQnP4dg.s:226    .text.chHeapStatus:00000038 $d
     /tmp/ccQnP4dg.s:229    .bss.default_heap:00000000 $d
     /tmp/ccQnP4dg.s:233    .bss.default_heap:00000000 default_heap

UNDEFINED SYMBOLS
chMtxInit
chCoreAlloc
chMtxLock
chMtxUnlock
