   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"serial.c"
  16              		.section	.text.putwouldblock,"ax",%progbits
  17              		.align	1
  18              		.thumb
  19              		.thumb_func
  21              	putwouldblock:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24              		@ link register save eliminated.
  25 0000 806B     		ldr	r0, [r0, #56]
  26 0002 D0F10100 		rsbs	r0, r0, #1
  27 0006 38BF     		it	cc
  28 0008 0020     		movcc	r0, #0
  29 000a 7047     		bx	lr
  31              		.section	.text.getwouldblock,"ax",%progbits
  32              		.align	1
  33              		.thumb
  34              		.thumb_func
  36              	getwouldblock:
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 8069     		ldr	r0, [r0, #24]
  41 0002 D0F10100 		rsbs	r0, r0, #1
  42 0006 38BF     		it	cc
  43 0008 0020     		movcc	r0, #0
  44 000a 7047     		bx	lr
  46              		.section	.text.getflags,"ax",%progbits
  47              		.align	1
  48              		.thumb
  49              		.thumb_func
  51              	getflags:
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 0246     		mov	r2, r0
  56 0002 2023     		movs	r3, #32
  57              	@ 105 "../src/ChibiOS_2.4.0/os/hal/src/serial.c" 1
  58 0004 83F31188 		msr     BASEPRI, r3
  59              	@ 0 "" 2
  60              		.thumb
  61 0008 0023     		movs	r3, #0
  62 000a 8068     		ldr	r0, [r0, #8]
  63 000c 9360     		str	r3, [r2, #8]
  64              	@ 105 "../src/ChibiOS_2.4.0/os/hal/src/serial.c" 1
  65 000e 83F31188 		msr     BASEPRI, r3
  66              	@ 0 "" 2
  67              		.thumb
  68 0012 7047     		bx	lr
  70              		.section	.text.readt,"ax",%progbits
  71              		.align	1
  72              		.thumb
  73              		.thumb_func
  75              	readt:
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 1030     		adds	r0, r0, #16
  80 0002 FFF7FEBF 		b	chIQReadTimeout
  82              		.section	.text.reads,"ax",%progbits
  83              		.align	1
  84              		.thumb
  85              		.thumb_func
  87              	reads:
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 1030     		adds	r0, r0, #16
  92 0002 4FF0FF33 		mov	r3, #-1
  93 0006 FFF7FEBF 		b	chIQReadTimeout
  95              		.section	.text.writet,"ax",%progbits
  96              		.align	1
  97              		.thumb
  98              		.thumb_func
 100              	writet:
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 3030     		adds	r0, r0, #48
 105 0002 FFF7FEBF 		b	chOQWriteTimeout
 107              		.section	.text.writes,"ax",%progbits
 108              		.align	1
 109              		.thumb
 110              		.thumb_func
 112              	writes:
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 3030     		adds	r0, r0, #48
 117 0002 4FF0FF33 		mov	r3, #-1
 118 0006 FFF7FEBF 		b	chOQWriteTimeout
 120              		.section	.text.gett,"ax",%progbits
 121              		.align	1
 122              		.thumb
 123              		.thumb_func
 125              	gett:
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 1030     		adds	r0, r0, #16
 130 0002 FFF7FEBF 		b	chIQGetTimeout
 132              		.section	.text.putt,"ax",%progbits
 133              		.align	1
 134              		.thumb
 135              		.thumb_func
 137              	putt:
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 3030     		adds	r0, r0, #48
 142 0002 FFF7FEBF 		b	chOQPutTimeout
 144              		.section	.text.sdInit,"ax",%progbits
 145              		.align	1
 146              		.global	sdInit
 147              		.thumb
 148              		.thumb_func
 150              	sdInit:
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0000 FFF7FEBF 		b	sd_lld_init
 156              		.section	.text.sdObjectInit,"ax",%progbits
 157              		.align	1
 158              		.global	sdObjectInit
 159              		.thumb
 160              		.thumb_func
 162              	sdObjectInit:
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 70B5     		push	{r4, r5, r6, lr}
 166 0002 0B46     		mov	r3, r1
 167 0004 1546     		mov	r5, r2
 168 0006 0D49     		ldr	r1, .L12
 169 0008 0246     		mov	r2, r0
 170 000a 0446     		mov	r4, r0
 171 000c 42F8041B 		str	r1, [r2], #4
 172 0010 0021     		movs	r1, #0
 173 0012 4260     		str	r2, [r0, #4]
 174 0014 0122     		movs	r2, #1
 175 0016 8160     		str	r1, [r0, #8]
 176 0018 0273     		strb	r2, [r0, #12]
 177 001a 04F15001 		add	r1, r4, #80
 178 001e 1030     		adds	r0, r0, #16
 179 0020 1022     		movs	r2, #16
 180 0022 FFF7FEFF 		bl	chIQInit
 181 0026 04F13000 		add	r0, r4, #48
 182 002a 04F16001 		add	r1, r4, #96
 183 002e 1022     		movs	r2, #16
 184 0030 2B46     		mov	r3, r5
 185 0032 BDE87040 		pop	{r4, r5, r6, lr}
 186 0036 FFF7FEBF 		b	chOQInit
 187              	.L13:
 188 003a 00BF     		.align	2
 189              	.L12:
 190 003c 00000000 		.word	.LANCHOR0
 192              		.section	.text.sdStart,"ax",%progbits
 193              		.align	1
 194              		.global	sdStart
 195              		.thumb
 196              		.thumb_func
 198              	sdStart:
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 10B5     		push	{r4, lr}
 202 0002 2023     		movs	r3, #32
 203 0004 0446     		mov	r4, r0
 204              	@ 169 "../src/ChibiOS_2.4.0/os/hal/src/serial.c" 1
 205 0006 83F31188 		msr     BASEPRI, r3
 206              	@ 0 "" 2
 207              		.thumb
 208 000a FFF7FEFF 		bl	sd_lld_start
 209 000e 0223     		movs	r3, #2
 210 0010 2373     		strb	r3, [r4, #12]
 211 0012 0023     		movs	r3, #0
 212              	@ 175 "../src/ChibiOS_2.4.0/os/hal/src/serial.c" 1
 213 0014 83F31188 		msr     BASEPRI, r3
 214              	@ 0 "" 2
 215              		.thumb
 216 0018 10BD     		pop	{r4, pc}
 218              		.section	.text.sdStop,"ax",%progbits
 219              		.align	1
 220              		.global	sdStop
 221              		.thumb
 222              		.thumb_func
 224              	sdStop:
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227 0000 10B5     		push	{r4, lr}
 228 0002 2023     		movs	r3, #32
 229 0004 0446     		mov	r4, r0
 230              	@ 191 "../src/ChibiOS_2.4.0/os/hal/src/serial.c" 1
 231 0006 83F31188 		msr     BASEPRI, r3
 232              	@ 0 "" 2
 233              		.thumb
 234 000a FFF7FEFF 		bl	sd_lld_stop
 235 000e 0123     		movs	r3, #1
 236 0010 2373     		strb	r3, [r4, #12]
 237 0012 04F13000 		add	r0, r4, #48
 238 0016 FFF7FEFF 		bl	chOQResetI
 239 001a 04F11000 		add	r0, r4, #16
 240 001e FFF7FEFF 		bl	chIQResetI
 241 0022 FFF7FEFF 		bl	chSchRescheduleS
 242 0026 0023     		movs	r3, #0
 243              	@ 200 "../src/ChibiOS_2.4.0/os/hal/src/serial.c" 1
 244 0028 83F31188 		msr     BASEPRI, r3
 245              	@ 0 "" 2
 246              		.thumb
 247 002c 10BD     		pop	{r4, pc}
 249              		.section	.text.sdIncomingDataI,"ax",%progbits
 250              		.align	1
 251              		.global	sdIncomingDataI
 252              		.thumb
 253              		.thumb_func
 255              	sdIncomingDataI:
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 38B5     		push	{r3, r4, r5, lr}
 259 0002 0D46     		mov	r5, r1
 260 0004 8169     		ldr	r1, [r0, #24]
 261 0006 0446     		mov	r4, r0
 262 0008 31B9     		cbnz	r1, .L17
 263 000a 8268     		ldr	r2, [r0, #8]
 264 000c 42F00403 		orr	r3, r2, #4
 265 0010 8360     		str	r3, [r0, #8]
 266 0012 0430     		adds	r0, r0, #4
 267 0014 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 268              	.L17:
 269 0018 04F11000 		add	r0, r4, #16
 270 001c 2946     		mov	r1, r5
 271 001e FFF7FEFF 		bl	chIQPutI
 272 0022 0028     		cmp	r0, #0
 273 0024 09DA     		bge	.L16
 274 0026 A168     		ldr	r1, [r4, #8]
 275 0028 41F08000 		orr	r0, r1, #128
 276 002c A060     		str	r0, [r4, #8]
 277 002e 0021     		movs	r1, #0
 278 0030 201D     		adds	r0, r4, #4
 279 0032 BDE83840 		pop	{r3, r4, r5, lr}
 280 0036 FFF7FEBF 		b	chEvtBroadcastFlagsI
 281              	.L16:
 282 003a 38BD     		pop	{r3, r4, r5, pc}
 284              		.section	.text.sdRequestDataI,"ax",%progbits
 285              		.align	1
 286              		.global	sdRequestDataI
 287              		.thumb
 288              		.thumb_func
 290              	sdRequestDataI:
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 38B5     		push	{r3, r4, r5, lr}
 294 0002 0546     		mov	r5, r0
 295 0004 3030     		adds	r0, r0, #48
 296 0006 FFF7FEFF 		bl	chOQGetI
 297 000a 041E     		subs	r4, r0, #0
 298 000c 07DA     		bge	.L20
 299 000e A868     		ldr	r0, [r5, #8]
 300 0010 40F00803 		orr	r3, r0, #8
 301 0014 AB60     		str	r3, [r5, #8]
 302 0016 281D     		adds	r0, r5, #4
 303 0018 0021     		movs	r1, #0
 304 001a FFF7FEFF 		bl	chEvtBroadcastFlagsI
 305              	.L20:
 306 001e 2046     		mov	r0, r4
 307 0020 38BD     		pop	{r3, r4, r5, pc}
 309              		.section	.rodata.vmt,"a",%progbits
 310              		.align	2
 311              		.set	.LANCHOR0,. + 0
 314              	vmt:
 315 0000 00000000 		.word	writes
 316 0004 00000000 		.word	reads
 317 0008 00000000 		.word	putwouldblock
 318 000c 00000000 		.word	getwouldblock
 319 0010 00000000 		.word	putt
 320 0014 00000000 		.word	gett
 321 0018 00000000 		.word	writet
 322 001c 00000000 		.word	readt
 323 0020 00000000 		.word	getflags
 324              		.ident	"GCC: (Sourcery CodeBench Lite 2012.03-56) 4.6.3"
DEFINED SYMBOLS
                            *ABS*:00000000 serial.c
     /tmp/ccajCuNg.s:17     .text.putwouldblock:00000000 $t
     /tmp/ccajCuNg.s:21     .text.putwouldblock:00000000 putwouldblock
     /tmp/ccajCuNg.s:32     .text.getwouldblock:00000000 $t
     /tmp/ccajCuNg.s:36     .text.getwouldblock:00000000 getwouldblock
     /tmp/ccajCuNg.s:47     .text.getflags:00000000 $t
     /tmp/ccajCuNg.s:51     .text.getflags:00000000 getflags
     /tmp/ccajCuNg.s:71     .text.readt:00000000 $t
     /tmp/ccajCuNg.s:75     .text.readt:00000000 readt
     /tmp/ccajCuNg.s:83     .text.reads:00000000 $t
     /tmp/ccajCuNg.s:87     .text.reads:00000000 reads
     /tmp/ccajCuNg.s:96     .text.writet:00000000 $t
     /tmp/ccajCuNg.s:100    .text.writet:00000000 writet
     /tmp/ccajCuNg.s:108    .text.writes:00000000 $t
     /tmp/ccajCuNg.s:112    .text.writes:00000000 writes
     /tmp/ccajCuNg.s:121    .text.gett:00000000 $t
     /tmp/ccajCuNg.s:125    .text.gett:00000000 gett
     /tmp/ccajCuNg.s:133    .text.putt:00000000 $t
     /tmp/ccajCuNg.s:137    .text.putt:00000000 putt
     /tmp/ccajCuNg.s:145    .text.sdInit:00000000 $t
     /tmp/ccajCuNg.s:150    .text.sdInit:00000000 sdInit
     /tmp/ccajCuNg.s:157    .text.sdObjectInit:00000000 $t
     /tmp/ccajCuNg.s:162    .text.sdObjectInit:00000000 sdObjectInit
     /tmp/ccajCuNg.s:190    .text.sdObjectInit:0000003c $d
     /tmp/ccajCuNg.s:193    .text.sdStart:00000000 $t
     /tmp/ccajCuNg.s:198    .text.sdStart:00000000 sdStart
     /tmp/ccajCuNg.s:219    .text.sdStop:00000000 $t
     /tmp/ccajCuNg.s:224    .text.sdStop:00000000 sdStop
     /tmp/ccajCuNg.s:250    .text.sdIncomingDataI:00000000 $t
     /tmp/ccajCuNg.s:255    .text.sdIncomingDataI:00000000 sdIncomingDataI
     /tmp/ccajCuNg.s:285    .text.sdRequestDataI:00000000 $t
     /tmp/ccajCuNg.s:290    .text.sdRequestDataI:00000000 sdRequestDataI
     /tmp/ccajCuNg.s:310    .rodata.vmt:00000000 $d
     /tmp/ccajCuNg.s:314    .rodata.vmt:00000000 vmt

UNDEFINED SYMBOLS
chIQReadTimeout
chOQWriteTimeout
chIQGetTimeout
chOQPutTimeout
sd_lld_init
chIQInit
chOQInit
sd_lld_start
sd_lld_stop
chOQResetI
chIQResetI
chSchRescheduleS
chEvtBroadcastFlagsI
chIQPutI
chOQGetI
